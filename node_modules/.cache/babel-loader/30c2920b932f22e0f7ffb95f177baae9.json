{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Mithat Kara/OneDrive/Masa\\xFCst\\xFC/React-Projeler/react-task/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Mithat Kara/OneDrive/Masa\\xFCst\\xFC/React-Projeler/react-task/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import\"../styles/App.scss\";import StatusLine from\"./StatusLine\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];useEffect(function(){loadTasksFromLocalStorage();},[]);var addEmptyTask=function addEmptyTask(status){var lastTask=tasks[tasks.length-1];var newTaskId=1;if(lastTask!==undefined){newTaskId=lastTask.id+1;}setTasks(function(tasks){return[].concat(_toConsumableArray(tasks),[{id:newTaskId,title:\"\",description:\"\",urgency:\"\",status:status}]);});};var addTask=function addTask(taskToAdd){var filteredTasks=tasks.filter(function(task){return task.id!==taskToAdd.id;});var newTaskList=[].concat(_toConsumableArray(filteredTasks),[taskToAdd]);setTasks(newTaskList);saveTasksToLocalStorage(newTaskList);};var deleteTask=function deleteTask(taskId){var filteredTasks=tasks.filter(function(task){return task.id!==taskId;});setTasks(filteredTasks);saveTasksToLocalStorage(filteredTasks);};var moveTask=function moveTask(id,newStatus){var task=tasks.filter(function(task){return task.id===id;})[0];var filteredTasks=tasks.filter(function(task){return task.id!==id;});task.status=newStatus;var newTaskList=[].concat(_toConsumableArray(filteredTasks),[task]);setTasks(newTaskList);saveTasksToLocalStorage(newTaskList);};var saveTasksToLocalStorage=function saveTasksToLocalStorage(tasks){localStorage.setItem(\"tasks\",JSON.stringify(tasks));};var loadTasksFromLocalStorage=function loadTasksFromLocalStorage(){var loadedTasks=localStorage.getItem(\"tasks\");var tasks=JSON.parse(loadedTasks);if(tasks){setTasks(tasks);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Management\"}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(StatusLine,{tasks:tasks,addEmptyTask:addEmptyTask,addTask:addTask,deleteTask:deleteTask,moveTask:moveTask,status:\"Backlog\"}),/*#__PURE__*/_jsx(StatusLine,{tasks:tasks,addEmptyTask:addEmptyTask,addTask:addTask,deleteTask:deleteTask,moveTask:moveTask,status:\"In Progress\"}),/*#__PURE__*/_jsx(StatusLine,{tasks:tasks,addEmptyTask:addEmptyTask,addTask:addTask,deleteTask:deleteTask,moveTask:moveTask,status:\"Done\"})]})})]});};export default App;","map":{"version":3,"sources":["C:/Users/Mithat Kara/OneDrive/Masaüstü/React-Projeler/react-task/src/components/App.jsx"],"names":["useState","useEffect","StatusLine","App","tasks","setTasks","loadTasksFromLocalStorage","addEmptyTask","status","lastTask","length","newTaskId","undefined","id","title","description","urgency","addTask","taskToAdd","filteredTasks","filter","task","newTaskList","saveTasksToLocalStorage","deleteTask","taskId","moveTask","newStatus","localStorage","setItem","JSON","stringify","loadedTasks","getItem","parse"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../styles/App.scss\";\nimport StatusLine from \"./StatusLine\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    loadTasksFromLocalStorage();\n  }, []);\n\n  const addEmptyTask = (status) => {\n    const lastTask = tasks[tasks.length - 1];\n\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        description: \"\",\n        urgency: \"\",\n        status: status,\n      },\n    ]);\n  };\n\n  const addTask = (taskToAdd) => {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n\n    let newTaskList = [...filteredTasks, taskToAdd];\n\n    setTasks(newTaskList);\n\n    saveTasksToLocalStorage(newTaskList);\n  };\n\n  const deleteTask = (taskId) => {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskId;\n    });\n\n    setTasks(filteredTasks);\n\n    saveTasksToLocalStorage(filteredTasks);\n  };\n\n  const moveTask = (id, newStatus) => {\n    let task = tasks.filter((task) => {\n      return task.id === id;\n    })[0];\n\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== id;\n    });\n\n    task.status = newStatus;\n\n    let newTaskList = [...filteredTasks, task];\n\n    setTasks(newTaskList);\n\n    saveTasksToLocalStorage(newTaskList);\n  };\n\n  const saveTasksToLocalStorage = (tasks) => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const loadTasksFromLocalStorage = () => {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n\n    let tasks = JSON.parse(loadedTasks);\n\n    if (tasks) {\n      setTasks(tasks);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Management</h1>\n      <main>\n        <section>\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Backlog\"\n          />\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"In Progress\"\n          />\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Done\"\n          />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}