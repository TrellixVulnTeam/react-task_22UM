{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mithat Kara\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\New folder\\\\react-task\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"../styles/App.scss\";\nimport StatusLine from \"./StatusLine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    loadTasksFromLocalStorage();\n  }, []);\n\n  const addEmptyTask = status => {\n    const lastTask = tasks[tasks.length - 1];\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks(tasks => [...tasks, {\n      id: newTaskId,\n      title: \"\",\n      description: \"\",\n      urgency: \"\",\n      status: status\n    }]);\n  };\n\n  const addTask = taskToAdd => {\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== taskToAdd.id;\n    });\n    let newTaskList = [...filteredTasks, taskToAdd];\n    setTasks(newTaskList);\n    saveTasksToLocalStorage(newTaskList);\n  };\n\n  const deleteTask = taskId => {\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== taskId;\n    });\n    setTasks(filteredTasks);\n    saveTasksToLocalStorage(filteredTasks);\n  };\n\n  const moveTask = (id, newStatus) => {\n    let task = tasks.filter(task => {\n      return task.id === id;\n    })[0];\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== id;\n    });\n    task.status = newStatus;\n    let newTaskList = [...filteredTasks, task];\n    setTasks(newTaskList);\n    saveTasksToLocalStorage(newTaskList);\n  };\n\n  const saveTasksToLocalStorage = tasks => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const loadTasksFromLocalStorage = () => {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n    let tasks = JSON.parse(loadedTasks);\n\n    if (tasks) {\n      setTasks(tasks);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Backlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mithat Kara/OneDrive/Masaüstü/New folder/react-task/src/components/App.jsx"],"names":["useState","useEffect","StatusLine","App","tasks","setTasks","loadTasksFromLocalStorage","addEmptyTask","status","lastTask","length","newTaskId","undefined","id","title","description","urgency","addTask","taskToAdd","filteredTasks","filter","task","newTaskList","saveTasksToLocalStorage","deleteTask","taskId","moveTask","newStatus","localStorage","setItem","JSON","stringify","loadedTasks","getItem","parse"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../styles/App.scss\";\nimport StatusLine from \"./StatusLine\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    loadTasksFromLocalStorage();\n  }, []);\n\n  const addEmptyTask = (status) => {\n    const lastTask = tasks[tasks.length - 1];\n\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        description: \"\",\n        urgency: \"\",\n        status: status,\n      },\n    ]);\n  }\n\n  const addTask = (taskToAdd) => {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n\n    let newTaskList = [...filteredTasks, taskToAdd];\n\n    setTasks(newTaskList);\n\n    saveTasksToLocalStorage(newTaskList);\n  }\n\n  const deleteTask = (taskId) => {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskId;\n    });\n\n    setTasks(filteredTasks);\n\n    saveTasksToLocalStorage(filteredTasks);\n  }\n\n  const moveTask = (id, newStatus) => {\n    let task = tasks.filter((task) => {\n      return task.id === id;\n    })[0];\n\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== id;\n    });\n\n    task.status = newStatus;\n\n    let newTaskList = [...filteredTasks, task];\n\n    setTasks(newTaskList);\n\n    saveTasksToLocalStorage(newTaskList);\n  }\n\n  const saveTasksToLocalStorage = (tasks) => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  const loadTasksFromLocalStorage = () => {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n\n    let tasks = JSON.parse(loadedTasks);\n\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Task Management</h1>\n      <main>\n        <section>\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Backlog\"\n          />\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"In Progress\"\n          />\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Done\"\n          />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}